name: Deploy Next.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Show .env contents (for debugging only - remove later)
        run: cat .env

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest

            echo "Force remove existing container if exists..."
            docker rm -f nextjs-app || true

            echo "Kill any process using port 3000..."
            sudo fuser -k 3000/tcp || true

            echo "Wait a few seconds for port to free up..."
            sleep 3

            echo "Running new container..."
            docker run -d --name nextjs-app -p 3000:3000 \
              -e NODE_ENV=production \
              ${{ secrets.DOCKER_USERNAME }}/nextjs-app:latest

